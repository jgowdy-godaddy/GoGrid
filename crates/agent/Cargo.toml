[package]
name = "corpgrid-agent"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true

[[bin]]
name = "corpgrid-agent"
path = "src/main.rs"

[dependencies]
corpgrid-common = { path = "../common" }
corpgrid-proto = { path = "../proto" }

# Async
tokio = { workspace = true }
tokio-util = { workspace = true }

# Networking
quinn = { workspace = true }
rustls = { workspace = true }
rustls-native-certs = { workspace = true }
tonic = { workspace = true }

# Object storage
aws-sdk-s3 = { workspace = true }
aws-config = { workspace = true }

# Serialization
serde = { workspace = true }
serde_json = { workspace = true }
serde_yaml = { workspace = true }

# Metrics
tracing = { workspace = true }
tracing-subscriber = { workspace = true }

# Archive
tar = { workspace = true }
flate2 = { workspace = true }

# Utilities
anyhow = { workspace = true }
thiserror = { workspace = true }
chrono = { workspace = true }
uuid = { workspace = true }
bytes = { workspace = true }
hostname = "0.4"
dirs = "5.0"
num_cpus = "1.16"
sys-info = "0.9"
which = "6.0"
sha2 = "0.10"
ed25519-dalek = "2.1"
rand = { workspace = true }

[target.'cfg(windows)'.dependencies]
windows = { version = "0.58", features = [
    "Win32_System_Power",
    "Win32_Graphics_Dxgi",
    "Win32_Graphics_Dxgi_Common",
    "Win32_System_Wmi",
] }

[target.'cfg(target_os = "macos")'.dependencies]
core-foundation = "0.10"
core-foundation-sys = "0.8"
io-kit-sys = "0.4"
metal = "0.29"
objc = "0.2"

[target.'cfg(target_os = "linux")'.dependencies]
nix = { version = "0.29", features = ["process"] }
nvml-wrapper = "0.10"
